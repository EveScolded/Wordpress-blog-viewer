{"version":3,"sources":["components/SideBar.module.css","components/PostList.module.css","components/Button.module.css","components/Post.module.css","components/Post.tsx","components/PostList.tsx","components/Button.tsx","components/SideBar.tsx","dataSources/Wordpress.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Post","date","Date","this","props","post","getDate","slice","getMonth","getFullYear","className","classes","postImg","src","_embedded","media_details","sizes","full","source_url","postTitle","title","rendered","postExcerpt","ReactHtmlParser","excerpt","postDateLink","postDate","renderDate","postLink","href","link","React","Component","PostList","postList","posts","map","Button","button","onClick","children","SideBar","inputConfirm","e","key","preventDefault","addNewDomain","target","value","showDeleteButtons","setState","deleteButtons","state","deleteDomainHandler","index","deleteDomain","sideBar","onKeyDown","domainList","domain","Wordpress","fetch","response","json","App","existingDomains","localStorage","getItem","includes","alert","newDomainsList","JSON","parse","domainsList","push","setItem","stringify","getPosts","splice","forEach","then","newPostsList","sort","a","b","getTime","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wHACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,WAAa,8B,mBCAlED,EAAOC,QAAU,CAAC,SAAW,6B,mBCA7BD,EAAOC,QAAU,CAAC,OAAS,yB,4DCA3BD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,QAAU,sBAAsB,UAAY,wBAAwB,YAAc,0BAA0B,aAAe,2BAA2B,SAAW,uBAAuB,SAAW,yB,2MCQlOC,EAAb,gKACE,WACE,IAAMC,EAAO,IAAIC,KAAKC,KAAKC,MAAMC,KAAKJ,MACtC,MAAM,GAAN,QAAW,IAAMA,EAAKK,WAAWC,OAAO,GAAxC,aACE,KACCN,EAAKO,WAAa,IACnBD,OAAO,GAHT,YAGeN,EAAKQ,iBANxB,oBASE,WACE,OACE,sBAAKC,UAAWC,IAAQN,KAAxB,UACE,qBACEK,UAAWC,IAAQC,QACnBC,IACEV,KAAKC,MAAMC,KAAKS,UAAU,oBAAoB,GAAGC,cAAcC,MAC5DC,KAAKC,aAGZ,oBAAIR,UAAWC,IAAQQ,UAAvB,SAAmChB,KAAKC,MAAMC,KAAKe,MAAMC,WACzD,mBAAGX,UAAWC,IAAQW,YAAtB,SACGC,IAAgBpB,KAAKC,MAAMC,KAAKmB,QAAQH,YAE3C,sBAAKX,UAAWC,IAAQc,aAAxB,UACE,sBAAKf,UAAWC,IAAQe,SAAxB,0BAAsCvB,KAAKwB,gBAC3C,sBAAKjB,UAAWC,IAAQiB,SAAxB,0BACK,mBAAGC,KAAM1B,KAAKC,MAAMC,KAAKyB,KAAzB,SAAgC3B,KAAKC,MAAMC,KAAKyB,oBA1B/D,GAA0BC,IAAMC,WCAnBC,EAAb,4JACE,WACE,OACE,oBAAIvB,UAAWC,IAAQuB,SAAvB,SACG/B,KAAKC,MAAM+B,MAAMC,KAAI,SAAC/B,GACrB,OAAO,cAAC,EAAD,CAAMA,KAAMA,aAL7B,GAA8B0B,IAAMC,W,iBCFfK,E,4JACnB,WACE,OACE,wBAAQ3B,UAAWC,IAAQ2B,OAAQC,QAASpC,KAAKC,MAAMmC,QAAvD,SACGpC,KAAKC,MAAMoC,e,GAJgBT,IAAMC,W,iBCOrBS,E,kDAInB,WAAYrC,GAAQ,IAAD,8BACjB,cAAMA,IAMRsC,aAAe,SAACC,GACA,UAAVA,EAAEC,MACJD,EAAEE,iBACF,EAAKzC,MAAM0C,aAAaH,EAAEI,OAAOC,OACjCL,EAAEI,OAAOC,MAAQ,KAXF,EAenBC,kBAAoB,WAClB,EAAKC,SAAS,CACZC,eAAgB,EAAKC,MAAMD,iBAjBZ,EAqBnBE,oBAAsB,SAACC,GACrB,EAAKlD,MAAMmD,aAAaD,GACxB,EAAKJ,SAAS,CACZC,eAAgB,EAAKC,MAAMD,iBAtB7B,EAAKC,MAAQ,CACXD,eAAe,GAHA,E,0CA4BnB,WAAU,IAAD,OACP,OACE,sBAAKzC,UAAWC,IAAQ6C,QAAxB,UACE,iCACE,+CACA,uBAAOC,UAAWtD,KAAKuC,kBAEzB,sBAAKhC,UAAWC,IAAQ+C,WAAxB,0BAEE,cAAC,EAAD,CAAQnB,QAASpC,KAAK8C,kBAAtB,qBAEF,6BACG9C,KAAKC,MAAMsD,WAAWtB,KAAI,SAACuB,EAAQL,GAClC,OACE,qCACE,6BAAKK,IACJ,EAAKP,MAAMD,eACV,cAAC,EAAD,CAAQZ,QAAS,kBAAM,EAAKc,oBAAoBC,IAAhD,8B,GAjDmBvB,IAAMC,W,yBCZtB4B,E,WAGnB,WAAYD,GAAS,yBAFrBA,YAEoB,EAClBxD,KAAKwD,OAASA,E,mFAGhB,sGACyBE,MAAM1D,KAAKwD,OAAS,8BAD7C,cACQG,EADR,gBAEsBA,EAASC,OAF/B,cAEQ5B,EAFR,yBAGSA,GAHT,gD,6DCsFa6B,E,kDAjFb,WAAY5D,GAAQ,IAAD,8BACjB,cAAMA,IA0BR0C,aAAe,SAACa,GACd,IAAMM,EAAkBC,aAAaC,QAAQ,WAE7C,GAAKF,EAAgBG,SAAST,GAa5BU,MAAM,+BAb+B,CACrC,IAAMC,EAAiBL,EAAe,YAC9BM,KAAKC,MAAMP,IADmB,YAE9B,EAAKb,MAAMqB,aAEnBH,EAAeI,KAAKf,GAEpB,EAAKT,SAAS,CAAEuB,YAAaH,IAAkB,kBAC7CJ,aAAaS,QAAQ,UAAWJ,KAAKK,UAAU,EAAKxB,MAAMqB,iBAG5D,EAAKI,SAASlB,KAzCC,EA+CnBJ,aAAe,SAACD,GACd,IAAMgB,EAAc,YAAO,EAAKlB,MAAMqB,aACtCH,EAAeQ,OAAOxB,EAAO,GAE7B,EAAKJ,SAAS,CAAEuB,YAAaH,IAE7B,EAAKlB,MAAMqB,YAAYM,SAAQ,SAACpB,GAC9B,EAAKkB,SAASlB,MAGhBO,aAAaS,QAAQ,UAAWJ,KAAKK,UAAU,EAAKxB,MAAMqB,eAvD1D,EAAKrB,MAAQ,CACXjB,MAAO,GACPsC,YAAa,IAJE,E,4CAQnB,SAASd,GAAS,IAAD,OACf,IAAIC,EAAUD,GAAQkB,WAAWG,MAAK,SAAC7C,GACrC,IAAM8C,EAAe,sBAAI,EAAK7B,MAAMjB,OAAf,YAAyBA,IAAO+C,MAAK,SAACC,EAAGC,GAC5D,OAAO,IAAIlF,KAAKkF,EAAEnF,MAAMoF,UAAY,IAAInF,KAAKiF,EAAElF,MAAMoF,aAGvD,EAAKnC,SAAS,CAAEf,MAAO8C,S,+BAI3B,WAAqB,IAAD,OACZhB,EAAkBM,KAAKC,MAAMN,aAAaC,QAAQ,YACxDhE,KAAK+C,SAAS,CAAEuB,YAAaR,IAE7BA,EAAgBc,SAAQ,SAACpB,GACvB,EAAKkB,SAASlB,Q,oBAqClB,WACE,OACE,qCACE,wBAAQjD,UAAU,YAAlB,iCACA,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,UAAf,SACE,cAAC,EAAD,CACEoC,aAAc3C,KAAK2C,aACnBY,WAAYvD,KAAKiD,MAAMqB,YACvBlB,aAAcpD,KAAKoD,iBAGvB,qBAAK7C,UAAU,WAAf,SACE,cAAC,EAAD,CAAUyB,MAAOhC,KAAKiD,MAAMjB,oB,GA1EtBJ,IAAMC,WCCTsD,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.97fc2064.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideBar\":\"SideBar_sideBar__1NZHR\",\"domainList\":\"SideBar_domainList__1XgRB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postList\":\"PostList_postList__1e6nB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2ilvj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__2L8F7\",\"postImg\":\"Post_postImg__3Qzb7\",\"postTitle\":\"Post_postTitle__3HVtS\",\"postExcerpt\":\"Post_postExcerpt__2LA2E\",\"postDateLink\":\"Post_postDateLink__1yESR\",\"postDate\":\"Post_postDate__3MAep\",\"postLink\":\"Post_postLink__5G5Bz\"};","import React from \"react\";\r\nimport { WordpressPost } from \"../model/WordpressPost\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport classes from \"./Post.module.css\";\r\n\r\ninterface PostProps {\r\n  post: WordpressPost;\r\n}\r\n\r\nexport class Post extends React.Component<PostProps, {}> {\r\n  private renderDate() {\r\n    const date = new Date(this.props.post.date);\r\n    return `${(\"0\" + date.getDate()).slice(-2)}.${(\r\n      \"0\" +\r\n      (date.getMonth() + 1)\r\n    ).slice(-2)}.${date.getFullYear()}`;\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className={classes.post}>\r\n        <img\r\n          className={classes.postImg}\r\n          src={\r\n            this.props.post._embedded[\"wp:featuredmedia\"][0].media_details.sizes\r\n              .full.source_url\r\n          }\r\n        />\r\n        <h3 className={classes.postTitle}>{this.props.post.title.rendered}</h3>\r\n        <p className={classes.postExcerpt}>\r\n          {ReactHtmlParser(this.props.post.excerpt.rendered)}\r\n        </p>\r\n        <div className={classes.postDateLink}>\r\n          <div className={classes.postDate}>üïë {this.renderDate()}</div>\r\n          <div className={classes.postLink}>\r\n            üåê <a href={this.props.post.link}>{this.props.post.link}</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport classes from \"./PostList.module.css\";\r\nimport { WordpressPost } from \"../model/WordpressPost\";\r\nimport { Post } from \"./Post\";\r\n\r\ninterface PostListProps {\r\n  posts: WordpressPost[];\r\n}\r\n\r\nexport class PostList extends React.Component<PostListProps, {}> {\r\n  render() {\r\n    return (\r\n      <ul className={classes.postList}>\r\n        {this.props.posts.map((post) => {\r\n          return <Post post={post}></Post>;\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport classes from \"./Button.module.css\";\r\n\r\ninterface ButtonProps {\r\n  onClick: () => void;\r\n}\r\n\r\nexport default class Button extends React.Component<ButtonProps, {}> {\r\n  render() {\r\n    return (\r\n      <button className={classes.button} onClick={this.props.onClick}>\r\n        {this.props.children}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Button from \"./Button\";\r\nimport classes from \"./SideBar.module.css\";\r\n\r\ninterface SideBarProps {\r\n  addNewDomain: (domain: string) => void;\r\n  deleteDomain: (index: number) => void;\r\n  domainList: string[];\r\n}\r\n\r\ninterface SideBarState {\r\n  deleteButtons: boolean;\r\n}\r\n\r\nexport default class SideBar extends React.Component<\r\n  SideBarProps,\r\n  SideBarState\r\n> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      deleteButtons: false,\r\n    };\r\n  }\r\n\r\n  inputConfirm = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n      this.props.addNewDomain(e.target.value);\r\n      e.target.value = \"\";\r\n    }\r\n  };\r\n\r\n  showDeleteButtons = () => {\r\n    this.setState({\r\n      deleteButtons: !this.state.deleteButtons,\r\n    });\r\n  };\r\n\r\n  deleteDomainHandler = (index) => {\r\n    this.props.deleteDomain(index);\r\n    this.setState({\r\n      deleteButtons: !this.state.deleteButtons,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.sideBar}>\r\n        <form>\r\n          <label>Add domain</label>\r\n          <input onKeyDown={this.inputConfirm}></input>\r\n        </form>\r\n        <div className={classes.domainList}>\r\n          Added domain:\r\n          <Button onClick={this.showDeleteButtons}>edit</Button>\r\n        </div>\r\n        <ul>\r\n          {this.props.domainList.map((domain, index) => {\r\n            return (\r\n              <>\r\n                <li>{domain}</li>\r\n                {this.state.deleteButtons && (\r\n                  <Button onClick={() => this.deleteDomainHandler(index)}>\r\n                    x\r\n                  </Button>\r\n                )}\r\n              </>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { WordpressPost } from \"../model/WordpressPost\";\r\n\r\nexport default class Wordpress {\r\n  domain;\r\n\r\n  constructor(domain) {\r\n    this.domain = domain;\r\n  }\r\n\r\n  public async getPosts(): Promise<WordpressPost[]> {\r\n    const response = await fetch(this.domain + \"wp-json/wp/v2/posts?_embed\");\r\n    const posts = await response.json();\r\n    return posts;\r\n  }\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { PostList } from \"./components/PostList\";\nimport SideBar from \"./components/SideBar\";\nimport Wordpress from \"./dataSources/Wordpress\";\nimport { WordpressPost } from \"./model/WordpressPost\";\n\ninterface AppState {\n  posts: WordpressPost[];\n  domainsList: string[];\n}\n\n//React.Component<{} - typ props√≥w, AppState - typ state>\nclass App extends React.Component<{}, AppState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: [],\n      domainsList: [],\n    };\n  }\n\n  getPosts(domain) {\n    new Wordpress(domain).getPosts().then((posts) => {\n      const newPostsList = [...this.state.posts, ...posts].sort((a, b) => {\n        return new Date(b.date).getTime() - new Date(a.date).getTime();\n      });\n\n      this.setState({ posts: newPostsList });\n    });\n  }\n\n  componentDidMount() {\n    const existingDomains = JSON.parse(localStorage.getItem(\"domains\"));\n    this.setState({ domainsList: existingDomains });\n\n    existingDomains.forEach((domain) => {\n      this.getPosts(domain);\n    });\n  }\n\n  addNewDomain = (domain) => {\n    const existingDomains = localStorage.getItem(\"domains\");\n\n    if (!existingDomains.includes(domain)) {\n      const newDomainsList = existingDomains\n        ? [...JSON.parse(existingDomains)]\n        : [...this.state.domainsList];\n\n      newDomainsList.push(domain);\n\n      this.setState({ domainsList: newDomainsList }, () =>\n        localStorage.setItem(\"domains\", JSON.stringify(this.state.domainsList))\n      );\n\n      this.getPosts(domain);\n    } else {\n      alert(\"Domain already exsists.\");\n    }\n  };\n\n  deleteDomain = (index) => {\n    const newDomainsList = [...this.state.domainsList];\n    newDomainsList.splice(index, 1);\n\n    this.setState({ domainsList: newDomainsList });\n\n    this.state.domainsList.forEach((domain) => {\n      this.getPosts(domain);\n    });\n\n    localStorage.setItem(\"domains\", JSON.stringify(this.state.domainsList));\n  };\n\n  public render() {\n    return (\n      <>\n        <header className=\"appHeader\">Amazing post viewer</header>\n        <div className=\"app\">\n          <div className=\"sideBar\">\n            <SideBar\n              addNewDomain={this.addNewDomain}\n              domainList={this.state.domainsList}\n              deleteDomain={this.deleteDomain}\n            />\n          </div>\n          <div className=\"postList\">\n            <PostList posts={this.state.posts}></PostList>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}